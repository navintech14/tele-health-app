"""
Django settings for telehealth project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-xlxj(32t(^h@83vk!@u2gl3^&p8bmfc(6pwqwkszgu&7&+6zh1"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "127.0.0.1",
    "https://telehealthnow.s3.ap-south-1.amazonaws.com",
    "http://telehealthnow.s3-website.ap-south-1.amazonaws.com",
    'http://127.0.0.1:8000', 
    "http://127.0.0.1:3000",
    "http://localhost:3000",
    "http://test10-env.eba-35qmbeyz.ap-south-1.elasticbeanstalk.com",
    "telehealth-db.c4yymzmgpmtd.ap-south-1.rds.amazonaws.com",
    
]

INTERNAL_IPS = [
    "127.0.0.1",
    'http://127.0.0.1:8000',
    "http://127.0.0.1:3000",
    "http://test10-env.eba-35qmbeyz.ap-south-1.elasticbeanstalk.com",
    "telehealth-db.c4yymzmgpmtd.ap-south-1.rds.amazonaws.com",
]

CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:3000",
    "https://telehealthnow.s3.ap-south-1.amazonaws.com",
    "http://telehealthnow.s3-website.ap-south-1.amazonaws.com",
    "http://127.0.0.1:8000",
    "http://localhost:3000",
    "telehealth-db.c4yymzmgpmtd.ap-south-1.rds.amazonaws.com",
    
]

CORS_ORIGIN_WHITELIST = [
    'http://127.0.0.1:8000', 
    "http://127.0.0.1:3000",
    "http://telehealthnow.s3-website.ap-south-1.amazonaws.com",
    "http://localhost:3000",
    "http://test10-env.eba-35qmbeyz.ap-south-1.elasticbeanstalk.com",
    "telehealth-db.c4yymzmgpmtd.ap-south-1.rds.amazonaws.com",
]

CORS_ALLOW_ALL_HEADERS = True
CORS_ALLOW_METHODS = [    'DELETE',    'GET',    'OPTIONS',    'PATCH',    'POST',    'PUT',]
CORS_ALLOW_CREDENTIALS = True


# Application definition

INSTALLED_APPS = [
    "admin_interface",
    "colorfield",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "debug_toolbar",
    "djoser",
    "corsheaders",
    "storages",
    "profiles",
    
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "telehealth.urls"



TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "telehealth.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "telehealth",
        "HOST": "localhost",
        "USER": "root",
        "PASSWORD": "navinsql",
    }
}








# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    # },
    # {
    #     "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    # },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Calcutta"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/



# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = "profiles.User"



REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}


SIMPLE_JWT = {
   'AUTH_HEADER_TYPES': ('JWT',),
   "ACCESS_TOKEN_LIFETIME": timedelta(days =30),
    "REFRESH_TOKEN_LIFETIME": timedelta(days =30),
}


DJOSER = {
    "SERIALIZERS": {
        "user_create": "profiles.serializers.UserCreateSerializer",
        "current_user": "profiles.serializers.UserSerializer"
    }
}





S3 = True
RDS = True

if S3:
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3StaticStorage'
    AWS_ACCESS_KEY_ID  = "AKIAZHH4NDKV4BLOX2N6"
    AWS_SECRET_ACCESS_KEY = "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"
    AWS_DEFAULT_ACL = "public-read-write"
    AWS_QUERYSTRING_AUTH = False
    AWS_S3_FILE_OVERWRITE = False
    AWS_STORAGE_BUCKET_NAME = "django-media-10001"
    # AWS_LOCATION = 'static'
    AWS_HEADERS = {
    'Access-Control-Allow-Origin': '*',
    }
    STATIC_URL = f'https://django-media-10001.s3.amazonaws.com/static/'
    MEDIA_URL = f'https://django-media-10001.s3.amazonaws.com/media/'
else:
    STATIC_URL = "static/"
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
    MEDIA_URL = '/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

if RDS:
    DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'telehealth-db',
        'HOST': 'telehealth-db.c4yymzmgpmtd.ap-south-1.rds.amazonaws.com',
        'PORT': 3306,
        'USER': 'admin',
        'PASSWORD': 'navinsqlaws'
    }
}