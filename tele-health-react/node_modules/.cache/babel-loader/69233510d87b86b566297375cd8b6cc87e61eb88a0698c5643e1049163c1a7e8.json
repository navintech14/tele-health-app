{"ast":null,"code":"import _toConsumableArray from\"D:/tele-health/tele-health-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{useEffect,useState}from'react';import Button from'react-bootstrap/Button';import Form from'react-bootstrap/Form';import OverlayTrigger from'react-bootstrap/OverlayTrigger';import axios from'axios';import{BASEURL}from'./baseURL';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function DoctorSlotAdd(_ref){var dateTime=_ref.dateTime,setDateTime=_ref.setDateTime,slotList=_ref.slotList,setSlotList=_ref.setSlotList;function addEntry(){var myDateTime=new Date(dateTime).getTime()+30*60*1000;var myNewSlot={doctorProfile:JSON.parse(localStorage.getItem(\"doctor_id\")),booking_date:dateTime.slice(0,10),start_time:dateTime.slice(12,16),end_time:new Date(myDateTime).toTimeString().slice(0,5)};setSlotList([].concat(_toConsumableArray(slotList),[myNewSlot]));console.log(myNewSlot);axios.post(BASEURL+\"/profile/book_slots_list/\",{headers:{authorization:\"JWT \"+JSON.parse(localStorage.getItem(\"access\"))},doctorProfile:myNewSlot.doctorProfile,booking_date:myNewSlot.booking_date,start_time:myNewSlot.start_time,end_time:myNewSlot.end_time}).then(function(response){console.log(response);}).catch(function(error){console.log(error);});}return/*#__PURE__*/_jsx(OverlayTrigger,{trigger:\"click\",placement:\"right\",overlay:/*#__PURE__*/_jsxs(Form,{style:{margin:10,backgroundColor:\"grey\"},children:[/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3\",controlId:\"book_date\"}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"book_time\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Date and Time\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"datetime-local\",placeholder:\"date_time\",required:true,onChange:function onChange(e){return setDateTime(e.target.value);}}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",className:\"mb-3\",type:\"submit\",onClick:function onClick(e){e.preventDefault();addEntry();},children:\"Confirm\"})]})]}),children:/*#__PURE__*/_jsx(Button,{variant:\"secondary\",children:\"Add Slots\"})},\"right\");}export default DoctorSlotAdd;","map":{"version":3,"names":["useEffect","useState","Button","Form","OverlayTrigger","axios","BASEURL","jsx","_jsx","jsxs","_jsxs","DoctorSlotAdd","_ref","dateTime","setDateTime","slotList","setSlotList","addEntry","myDateTime","Date","getTime","myNewSlot","doctorProfile","JSON","parse","localStorage","getItem","booking_date","slice","start_time","end_time","toTimeString","concat","_toConsumableArray","console","log","post","headers","authorization","then","response","catch","error","trigger","placement","overlay","style","margin","backgroundColor","children","Group","className","controlId","Label","Control","type","placeholder","required","onChange","e","target","value","variant","onClick","preventDefault"],"sources":["D:/tele-health/tele-health-react/src/DoctorSlotAdd.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport axios from 'axios';\r\nimport { BASEURL } from './baseURL';\r\n\r\n\r\nfunction DoctorSlotAdd( {dateTime, setDateTime, slotList, setSlotList} ) {\r\n\r\n  function addEntry()\r\n  {\r\n    const myDateTime = new Date(dateTime).getTime() + 30*60*1000;\r\n    const myNewSlot = {\r\n      doctorProfile: JSON.parse(localStorage.getItem(\"doctor_id\")),\r\n      booking_date: dateTime.slice(0, 10),\r\n      start_time: dateTime.slice(12, 16),\r\n      end_time: new Date(myDateTime).toTimeString().slice(0, 5)\r\n    }\r\n    setSlotList([...slotList , myNewSlot]);\r\n    console.log(myNewSlot);\r\n    axios.post(BASEURL + \"/profile/book_slots_list/\",{\r\n      headers: {\r\n          authorization: \"JWT \"+ JSON.parse(localStorage.getItem(\"access\"))\r\n        },\r\n        doctorProfile: myNewSlot.doctorProfile,\r\n        booking_date: myNewSlot.booking_date,\r\n        start_time: myNewSlot.start_time,\r\n        end_time: myNewSlot.end_time\r\n      }).then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <OverlayTrigger \r\n      trigger = \"click\"\r\n      key = \"right\"\r\n      placement=\"right\"\r\n      overlay={\r\n        <Form style={\r\n          {margin: 10 , backgroundColor: \"grey\"}\r\n        }>\r\n          <Form.Group className=\"mb-3\" controlId=\"book_date\" >\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"book_time\">\r\n              <Form.Label>Date and Time</Form.Label>\r\n              <Form.Control\r\n                  type = \"datetime-local\"\r\n                  placeholder=\"date_time\"\r\n                  required\r\n                  onChange={(e) => setDateTime(e.target.value)}\r\n              />\r\n              <Button \r\n                variant=\"primary\" \r\n                className=\"mb-3\" \r\n                type=\"submit\"\r\n                onClick={(e) => {\r\n                  e.preventDefault(); \r\n                  addEntry();\r\n                  }}>\r\n                  Confirm\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n      }\r\n      >\r\n      <Button variant=\"secondary\">Add Slots</Button>\r\n      </OverlayTrigger>\r\n  )\r\n}\r\n\r\nexport default DoctorSlotAdd"],"mappings":"8HAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,MAAM,KAAM,wBAAwB,CAC3C,MAAO,CAAAC,IAAI,KAAM,sBAAsB,CACvC,MAAO,CAAAC,cAAc,KAAM,gCAAgC,CAC3D,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGpC,QAAS,CAAAC,aAAaA,CAAAC,IAAA,CAAmD,IAAhD,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAAEC,WAAW,CAAAF,IAAA,CAAXE,WAAW,CAAEC,QAAQ,CAAAH,IAAA,CAARG,QAAQ,CAAEC,WAAW,CAAAJ,IAAA,CAAXI,WAAW,CAEnE,QAAS,CAAAC,QAAQA,CAAA,CACjB,CACE,GAAM,CAAAC,UAAU,CAAG,GAAI,CAAAC,IAAI,CAACN,QAAQ,CAAC,CAACO,OAAO,EAAE,CAAG,EAAE,CAAC,EAAE,CAAC,IAAI,CAC5D,GAAM,CAAAC,SAAS,CAAG,CAChBC,aAAa,CAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAC5DC,YAAY,CAAEd,QAAQ,CAACe,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CACnCC,UAAU,CAAEhB,QAAQ,CAACe,KAAK,CAAC,EAAE,CAAE,EAAE,CAAC,CAClCE,QAAQ,CAAE,GAAI,CAAAX,IAAI,CAACD,UAAU,CAAC,CAACa,YAAY,EAAE,CAACH,KAAK,CAAC,CAAC,CAAE,CAAC,CAC1D,CAAC,CACDZ,WAAW,IAAAgB,MAAA,CAAAC,kBAAA,CAAKlB,QAAQ,GAAGM,SAAS,GAAE,CACtCa,OAAO,CAACC,GAAG,CAACd,SAAS,CAAC,CACtBhB,KAAK,CAAC+B,IAAI,CAAC9B,OAAO,CAAG,2BAA2B,CAAC,CAC/C+B,OAAO,CAAE,CACLC,aAAa,CAAE,MAAM,CAAEf,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAClE,CAAC,CACDJ,aAAa,CAAED,SAAS,CAACC,aAAa,CACtCK,YAAY,CAAEN,SAAS,CAACM,YAAY,CACpCE,UAAU,CAAER,SAAS,CAACQ,UAAU,CAChCC,QAAQ,CAAET,SAAS,CAACS,QACtB,CAAC,CAAC,CAACS,IAAI,CAAC,SAAUC,QAAQ,CAAE,CAC1BN,OAAO,CAACC,GAAG,CAACK,QAAQ,CAAC,CACvB,CAAC,CAAC,CACDC,KAAK,CAAC,SAAUC,KAAK,CAAE,CACtBR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC,CACtB,CAAC,CAAC,CACJ,CAEA,mBACElC,IAAA,CAACJ,cAAc,EACbuC,OAAO,CAAG,OAAO,CAEjBC,SAAS,CAAC,OAAO,CACjBC,OAAO,cACLnC,KAAA,CAACP,IAAI,EAAC2C,KAAK,CACT,CAACC,MAAM,CAAE,EAAE,CAAGC,eAAe,CAAE,MAAM,CACtC,CAAAC,QAAA,eACCzC,IAAA,CAACL,IAAI,CAAC+C,KAAK,EAACC,SAAS,CAAC,MAAM,CAACC,SAAS,CAAC,WAAW,EACnC,cACb1C,KAAA,CAACP,IAAI,CAAC+C,KAAK,EAACC,SAAS,CAAC,MAAM,CAACC,SAAS,CAAC,WAAW,CAAAH,QAAA,eAChDzC,IAAA,CAACL,IAAI,CAACkD,KAAK,EAAAJ,QAAA,CAAC,eAAa,EAAa,cACtCzC,IAAA,CAACL,IAAI,CAACmD,OAAO,EACTC,IAAI,CAAG,gBAAgB,CACvBC,WAAW,CAAC,WAAW,CACvBC,QAAQ,MACRC,QAAQ,CAAE,SAAAA,SAACC,CAAC,QAAK,CAAA7C,WAAW,CAAC6C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,EAAC,EAC/C,cACFrD,IAAA,CAACN,MAAM,EACL4D,OAAO,CAAC,SAAS,CACjBX,SAAS,CAAC,MAAM,CAChBI,IAAI,CAAC,QAAQ,CACbQ,OAAO,CAAE,SAAAA,QAACJ,CAAC,CAAK,CACdA,CAAC,CAACK,cAAc,EAAE,CAClB/C,QAAQ,EAAE,CACV,CAAE,CAAAgC,QAAA,CAAC,SAEP,EAAS,GACE,GAElB,CAAAA,QAAA,cAEDzC,IAAA,CAACN,MAAM,EAAC4D,OAAO,CAAC,WAAW,CAAAb,QAAA,CAAC,WAAS,EAAS,EA9BxC,OAAO,CA+BI,CAEvB,CAEA,cAAe,CAAAtC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}