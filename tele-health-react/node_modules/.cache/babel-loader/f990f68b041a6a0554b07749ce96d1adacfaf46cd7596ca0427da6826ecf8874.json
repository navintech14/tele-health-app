{"ast":null,"code":"var _jsxFileName = \"D:\\\\tele-health\\\\tele-health-react\\\\src\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { BASEURL } from './baseURL';\nimport { AppContext } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterForm() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    isDoctor,\n    setIsDoctor\n  } = useContext(AppContext);\n  const navigate = useNavigate();\n  function postUserData() {\n    axios.post(BASEURL + \"/auth/users/\", {\n      email: email,\n      username: username,\n      password: password,\n      isDoctor: isDoctor\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"RegisterFrom.email\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Email ID\",\n        required: true,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"RegisterFrom.username\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Username\",\n        required: true,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"RegisterFrom.password\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        id: \"passwordHelpBlock\",\n        muted: true,\n        children: \"Your password must be 8-20 characters long.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n      className: \"mb-3\",\n      id: \"RegisterFrom.isDoctor\",\n      type: \"checkbox\",\n      label: \"I am a Doctor\",\n      onChange: () => setIsDoctor(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"mb-3\",\n      type: \"submit\",\n      onClick: e => {\n        e.preventDefault();\n        postUserData();\n        navigate(\"/login\");\n      },\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n_s(RegisterForm, \"RqY+/Y03UX4n73haDVjho77HYN8=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["useState","Form","Button","axios","useNavigate","BASEURL","AppContext","jsxDEV","_jsxDEV","RegisterForm","_s","email","setEmail","username","setUsername","password","setPassword","isDoctor","setIsDoctor","useContext","navigate","postUserData","post","then","response","console","log","catch","error","style","margin","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","required","onChange","e","target","value","Text","id","muted","Check","label","variant","onClick","preventDefault","_c","$RefreshReg$"],"sources":["D:/tele-health/tele-health-react/src/RegisterForm.js"],"sourcesContent":["import { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BASEURL } from './baseURL';\r\nimport { AppContext } from './App';\r\n\r\nfunction RegisterForm() {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { isDoctor, setIsDoctor } = useContext(AppContext);\r\n  const navigate = useNavigate();\r\n\r\n\r\n    function postUserData(){\r\n      axios.post(BASEURL + \"/auth/users/\",{\r\n        email: email,\r\n        username: username,\r\n        password: password,\r\n        isDoctor: isDoctor\r\n      }).then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    return (\r\n      <Form style={\r\n        {margin: 10}\r\n      }>\r\n        <Form.Group className=\"mb-3\" controlId=\"RegisterFrom.email\">\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control\r\n            type = \"text\"\r\n            placeholder=\"Email ID\"\r\n            required\r\n            onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"RegisterFrom.username\">\r\n        <Form.Label>Username</Form.Label>\r\n        <Form.Control\r\n            type= \"text\"\r\n            placeholder=\"Username\"\r\n            required\r\n            onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"RegisterFrom.password\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n            type= \"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <Form.Text id=\"passwordHelpBlock\" muted>\r\n        Your password must be 8-20 characters long.\r\n        </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Check \r\n          className=\"mb-3\" \r\n          id=\"RegisterFrom.isDoctor\"\r\n          type = \"checkbox\"\r\n          label = \"I am a Doctor\"\r\n          onChange={() => setIsDoctor(true)}\r\n        />\r\n        \r\n\r\n        <Button \r\n          variant=\"primary\" \r\n          className=\"mb-3\" \r\n          type=\"submit\"\r\n          onClick={(e) => {\r\n            e.preventDefault(); \r\n            postUserData()\r\n            navigate(\"/login\")}}>\r\n            Register\r\n        </Button>\r\n      </Form>\r\n    );\r\n}\r\n\r\nexport default RegisterForm;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAEtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEiB,QAAQ;IAAEC;EAAY,CAAC,GAAGC,UAAU,CAACb,UAAU,CAAC;EACxD,MAAMc,QAAQ,GAAGhB,WAAW,EAAE;EAG5B,SAASiB,YAAYA,CAAA,EAAE;IACrBlB,KAAK,CAACmB,IAAI,CAACjB,OAAO,GAAG,cAAc,EAAC;MAClCM,KAAK,EAAEA,KAAK;MACZE,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAEA;IACZ,CAAC,CAAC,CAACM,IAAI,CAAC,UAAUC,QAAQ,EAAE;MAC1BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,CAAC,CACDG,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA,oBACEpB,OAAA,CAACP,IAAI;IAAC4B,KAAK,EACT;MAACC,MAAM,EAAE;IAAE,CACZ;IAAAC,QAAA,gBACCvB,OAAA,CAACP,IAAI,CAAC+B,KAAK;MAACC,SAAS,EAAC,MAAM;MAACC,SAAS,EAAC,oBAAoB;MAAAH,QAAA,gBAC3DvB,OAAA,CAACP,IAAI,CAACkC,KAAK;QAAAJ,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eAC9B/B,OAAA,CAACP,IAAI,CAACuC,OAAO;QACTC,IAAI,EAAG,MAAM;QACbC,WAAW,EAAC,UAAU;QACtBC,QAAQ;QACRC,QAAQ,EAAGC,CAAC,IAAKjC,QAAQ,CAACiC,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACW,eAEb/B,OAAA,CAACP,IAAI,CAAC+B,KAAK;MAACC,SAAS,EAAC,MAAM;MAACC,SAAS,EAAC,uBAAuB;MAAAH,QAAA,gBAC9DvB,OAAA,CAACP,IAAI,CAACkC,KAAK;QAAAJ,QAAA,EAAC;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACjC/B,OAAA,CAACP,IAAI,CAACuC,OAAO;QACTC,IAAI,EAAE,MAAM;QACZC,WAAW,EAAC,UAAU;QACtBC,QAAQ;QACRC,QAAQ,EAAGC,CAAC,IAAK/B,WAAW,CAAC+B,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACW,eAEb/B,OAAA,CAACP,IAAI,CAAC+B,KAAK;MAACC,SAAS,EAAC,MAAM;MAACC,SAAS,EAAC,uBAAuB;MAAAH,QAAA,gBAC9DvB,OAAA,CAACP,IAAI,CAACkC,KAAK;QAAAJ,QAAA,EAAC;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACjC/B,OAAA,CAACP,IAAI,CAACuC,OAAO;QACTC,IAAI,EAAE,UAAU;QAChBC,WAAW,EAAC,UAAU;QACtBC,QAAQ;QACRC,QAAQ,EAAGC,CAAC,IAAK7B,WAAW,CAAC6B,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/C,eACF/B,OAAA,CAACP,IAAI,CAAC+C,IAAI;QAACC,EAAE,EAAC,mBAAmB;QAACC,KAAK;QAAAnB,QAAA,EAAC;MAExC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAY;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eAEb/B,OAAA,CAACP,IAAI,CAACkD,KAAK;MACTlB,SAAS,EAAC,MAAM;MAChBgB,EAAE,EAAC,uBAAuB;MAC1BR,IAAI,EAAG,UAAU;MACjBW,KAAK,EAAG,eAAe;MACvBR,QAAQ,EAAEA,CAAA,KAAM1B,WAAW,CAAC,IAAI;IAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClC,eAGF/B,OAAA,CAACN,MAAM;MACLmD,OAAO,EAAC,SAAS;MACjBpB,SAAS,EAAC,MAAM;MAChBQ,IAAI,EAAC,QAAQ;MACba,OAAO,EAAGT,CAAC,IAAK;QACdA,CAAC,CAACU,cAAc,EAAE;QAClBlC,YAAY,EAAE;QACdD,QAAQ,CAAC,QAAQ,CAAC;MAAA,CAAE;MAAAW,QAAA,EAAC;IAEzB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEb;AAAC7B,EAAA,CAjFQD,YAAY;EAAA,QAMFL,WAAW;AAAA;AAAAoD,EAAA,GANrB/C,YAAY;AAmFrB,eAAeA,YAAY;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}