{"ast":null,"code":"var _jsxFileName = \"D:\\\\tele-health\\\\tele-health-react\\\\src\\\\DoctorSlotAdd.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport axios from 'axios';\nimport { BASEURL } from './baseURL';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorSlotAdd() {\n  _s();\n  const [dateTime, setDateTime] = useState(\"\");\n  const [slotList, setSlotList] = useState([]);\n  useEffect(() => {\n    axios.get(BASEURL + `/profile/book_slots_list/${localStorage.getItem(\"doctor_id\")}`, {}).then(function (response) {\n      console.log(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    slotList.map(slots => console.log(slots.id));\n  }, [slotList]);\n  function addEntry() {\n    const end = new Date(time).getTime() + 30 * 60 * 1000;\n    const myNewSlot = {\n      doctorProfile: JSON.parse(localStorage.getItem(\"doctor_id\")),\n      booking_date: date,\n      start_time: time,\n      end_time: new Date(end).toTimeString().slice(0, 8)\n    };\n    setSlotList([...slotList, myNewSlot]);\n    console.log(myNewSlot);\n    axios.post(BASEURL + \"/profile/book_slots_list/\", {\n      headers: {\n        authorization: \"JWT \" + JSON.parse(localStorage.getItem(\"access\"))\n      },\n      doctorProfile: myNewSlot.doctorProfile,\n      booking_date: myNewSlot.booking_date,\n      start_time: myNewSlot.start_time,\n      end_time: myNewSlot.end_time\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n    trigger: \"click\",\n    placement: \"right\",\n    overlay: /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        margin: 10,\n        backgroundColor: \"grey\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"book_date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"book_time\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Date and Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"datetime-local\",\n          placeholder: \"date_time\",\n          required: true,\n          onChange: e => setTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          type: \"submit\",\n          onClick: e => {\n            e.preventDefault();\n            addEntry();\n          },\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      children: \"Add Slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, \"right\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorSlotAdd, \"WyP+YgL9tYTBjgQrbnvLzMt+KWQ=\");\n_c = DoctorSlotAdd;\nexport default DoctorSlotAdd;\nvar _c;\n$RefreshReg$(_c, \"DoctorSlotAdd\");","map":{"version":3,"names":["useEffect","useState","Button","Form","OverlayTrigger","axios","BASEURL","jsxDEV","_jsxDEV","DoctorSlotAdd","_s","dateTime","setDateTime","slotList","setSlotList","get","localStorage","getItem","then","response","console","log","data","catch","error","map","slots","id","addEntry","end","Date","time","getTime","myNewSlot","doctorProfile","JSON","parse","booking_date","date","start_time","end_time","toTimeString","slice","post","headers","authorization","trigger","placement","overlay","style","margin","backgroundColor","children","Group","className","controlId","fileName","_jsxFileName","lineNumber","columnNumber","Label","Control","type","placeholder","required","onChange","e","setTime","target","value","variant","onClick","preventDefault","_c","$RefreshReg$"],"sources":["D:/tele-health/tele-health-react/src/DoctorSlotAdd.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport axios from 'axios';\r\nimport { BASEURL } from './baseURL';\r\n\r\n\r\nfunction DoctorSlotAdd() {\r\n\r\n  const [dateTime, setDateTime] = useState(\"\");\r\n  const [slotList, setSlotList] = useState([]);\r\n \r\n\r\n  useEffect(()=>{\r\n    axios.get(BASEURL + `/profile/book_slots_list/${localStorage.getItem(\"doctor_id\")}`,{\r\n    }).then(function (response) {\r\n      console.log(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n    });\r\n    slotList.map((slots) => (console.log(slots.id)));\r\n  }, [slotList]);\r\n\r\n  function addEntry()\r\n  {\r\n    const end = new Date(time).getTime() + 30*60*1000;\r\n    const myNewSlot = {\r\n      doctorProfile: JSON.parse(localStorage.getItem(\"doctor_id\")),\r\n      booking_date: date,\r\n      start_time: time,\r\n      end_time: new Date(end).toTimeString().slice(0, 8)\r\n    }\r\n    setSlotList([...slotList, myNewSlot]);\r\n    console.log(myNewSlot);\r\n    axios.post(BASEURL + \"/profile/book_slots_list/\",{\r\n      headers: {\r\n          authorization: \"JWT \"+ JSON.parse(localStorage.getItem(\"access\"))\r\n        },\r\n        doctorProfile: myNewSlot.doctorProfile,\r\n        booking_date: myNewSlot.booking_date,\r\n        start_time: myNewSlot.start_time,\r\n        end_time: myNewSlot.end_time\r\n      }).then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <OverlayTrigger \r\n      trigger = \"click\"\r\n      key = \"right\"\r\n      placement=\"right\"\r\n      overlay={\r\n        <Form style={\r\n          {margin: 10 , backgroundColor: \"grey\"}\r\n        }>\r\n          <Form.Group className=\"mb-3\" controlId=\"book_date\" >\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"book_time\">\r\n              <Form.Label>Date and Time</Form.Label>\r\n              <Form.Control\r\n                  type = \"datetime-local\"\r\n                  placeholder=\"date_time\"\r\n                  required\r\n                  onChange={(e) => setTime(e.target.value)}\r\n              />\r\n              <Button \r\n                variant=\"primary\" \r\n                className=\"mb-3\" \r\n                type=\"submit\"\r\n                onClick={(e) => {\r\n                  e.preventDefault(); \r\n                  addEntry();\r\n                  }}>\r\n                  Confirm\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n      }\r\n      >\r\n      <Button variant=\"secondary\">Add Slots</Button>\r\n      </OverlayTrigger>\r\n  )\r\n}\r\n\r\nexport default DoctorSlotAdd"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}