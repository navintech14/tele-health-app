{"ast":null,"code":"var _jsxFileName = \"D:\\\\tele-health\\\\tele-health-react\\\\src\\\\UploadImageButton.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { useContext, useState } from 'react';\nimport { AppContext } from './App';\nimport axios from 'axios';\nimport { BASEURL } from './baseURL';\nimport { Button } from 'react-bootstrap';\nimport encrypt from './encrypt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadImageButton(_ref) {\n  _s();\n  let {\n    imageList,\n    setImageList\n  } = _ref;\n  const {\n    patientId\n  } = useContext(AppContext);\n  const [image, setImage] = useState(null);\n  function sendFile() {\n    const res = encrypt(image, result => {\n      const [encryptedImage, key] = result;\n      const formData = new FormData();\n      formData.append(\"image\", encryptedImage, image.name);\n      formData.append(\"patientProfile\", patientId);\n      formData.append(\"key\", key);\n      axios.post(BASEURL + \"/profile/image_list/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    controlId: \"formFile\",\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => {\n        setImage(e.target.files[0]);\n        setImageList(...imageList, image);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"mb-3\",\n      type: \"submit\",\n      onClick: e => sendFile(e),\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadImageButton, \"ajHc8EC0xfyExCN6i0j+uBeaVCg=\");\n_c = UploadImageButton;\nexport default UploadImageButton;\n\n// encrypt input = File with name and type\n// encrypt output = blob\n\n// decrypt api output -> image url without server root, key\nvar _c;\n$RefreshReg$(_c, \"UploadImageButton\");","map":{"version":3,"names":["React","Form","useContext","useState","AppContext","axios","BASEURL","Button","encrypt","jsxDEV","_jsxDEV","UploadImageButton","_ref","_s","imageList","setImageList","patientId","image","setImage","sendFile","res","result","encryptedImage","key","formData","FormData","append","name","post","headers","then","response","console","log","catch","error","Group","controlId","className","children","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","accept","onChange","e","target","files","variant","onClick","_c","$RefreshReg$"],"sources":["D:/tele-health/tele-health-react/src/UploadImageButton.js"],"sourcesContent":["import React from 'react'\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useContext, useState } from 'react';\r\nimport { AppContext } from './App';\r\nimport axios from 'axios';\r\nimport { BASEURL } from './baseURL';\r\nimport { Button } from 'react-bootstrap';\r\nimport encrypt from './encrypt';\r\n\r\nfunction UploadImageButton( {imageList, setImageList} ) {\r\n\r\n  const {patientId} = useContext(AppContext);\r\n  const [image, setImage] = useState(null);\r\n\r\n  function sendFile()\r\n  {\r\n      const res = encrypt(image, (result) =>{\r\n      const [encryptedImage, key] = result;\r\n      const formData = new FormData();\r\n      formData.append(\"image\", encryptedImage, image.name);\r\n      formData.append(\"patientProfile\", patientId);\r\n      formData.append(\"key\", key);\r\n      axios.post(BASEURL+\"/profile/image_list/\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      }).then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n    });\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n      <Form.Label>Upload Image</Form.Label>\r\n      <Form.Control \r\n          type=\"file\" \r\n          accept=\"image/*\" \r\n          onChange={(e)=>{\r\n            setImage(e.target.files[0]);\r\n            setImageList(...imageList, image);\r\n            }\r\n          }/>\r\n        <Button\r\n          variant=\"primary\" \r\n          className=\"mb-3\"\r\n          type=\"submit\"\r\n          onClick= {(e)=>sendFile(e)}>\r\n          Upload\r\n        </Button>\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default UploadImageButton\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// encrypt input = File with name and type\r\n// encrypt output = blob\r\n\r\n\r\n\r\n// decrypt api output -> image url without server root, key"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}