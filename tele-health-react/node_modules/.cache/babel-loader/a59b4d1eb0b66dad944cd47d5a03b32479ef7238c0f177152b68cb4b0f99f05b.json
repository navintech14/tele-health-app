{"ast":null,"code":"var _jsxFileName = \"D:\\\\tele-health\\\\tele-health-react\\\\src\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { BASEURL } from './baseURL';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterForm() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  function postUserData() {\n    axios.post(\"/auth/users/\", {\n      email: {\n        email\n      },\n      username: {\n        username\n      },\n      password: {\n        password\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"RegisterFrom.ControlInput1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        id: \"email\",\n        type: \"text\",\n        placeholder: \"Email ID\",\n        required: true,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"RegisterFrom.ControlInput2\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        id: \"username\",\n        type: \"text\",\n        placeholder: \"Username\",\n        required: true,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"RegisterFrom.ControlInput3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        id: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        id: \"passwordHelpBlock\",\n        muted: true,\n        children: \"Your password must be 8-20 characters long.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"mb-3\",\n      type: \"submit\",\n      onClick: () => postUserData(),\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n_s(RegisterForm, \"ys9BfYGn4l1K34YvoWC903iXxZI=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["useState","Form","Button","axios","BASEURL","jsxDEV","_jsxDEV","RegisterForm","_s","email","setEmail","username","setUsername","password","setPassword","postUserData","post","style","margin","children","Group","className","controlId","Label","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","Control","id","type","placeholder","required","onChange","e","target","value","Text","muted","variant","onClick","_c","$RefreshReg$"],"sources":["D:/tele-health/tele-health-react/src/RegisterForm.js"],"sourcesContent":["import { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport { BASEURL } from './baseURL';\r\n\r\nfunction RegisterForm() {\r\n\r\n  const [email, setEmail] = useState(\"\")\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n\r\n    function postUserData(){\r\n      axios.post(\"/auth/users/\",{\r\n        email: {email},\r\n        username: {username},\r\n        password: {password}\r\n      })\r\n    }\r\n\r\n    return (\r\n      <Form style={\r\n        {margin: 10}\r\n      }>\r\n        <Form.Group className=\"mb-3\" controlId=\"RegisterFrom.ControlInput1\">\r\n        <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n        <Form.Control\r\n            id = \"email\"\r\n            type = \"text\"\r\n            placeholder=\"Email ID\"\r\n            required\r\n            onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"RegisterFrom.ControlInput2\">\r\n        <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n        <Form.Control\r\n            id=\"username\"\r\n            type= \"text\"\r\n            placeholder=\"Username\"\r\n            required\r\n            onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"RegisterFrom.ControlInput3\">\r\n        <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n        <Form.Control\r\n            id = \"password\"\r\n            type= \"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <Form.Text id=\"passwordHelpBlock\" muted>\r\n        Your password must be 8-20 characters long.\r\n        </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Button \r\n          variant=\"primary\" \r\n          className=\"mb-3\" \r\n          type=\"submit\"\r\n          onClick={() => postUserData()}>\r\n            Register</Button>\r\n      </Form>\r\n    );\r\n}\r\n\r\nexport default RegisterForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}