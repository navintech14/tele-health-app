{"ast":null,"code":"var _jsxFileName = \"D:\\\\tele-health\\\\tele-health-react\\\\src\\\\DoctorSlotList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { BASEURL } from './baseURL';\nimport { Card } from 'react-bootstrap';\nimport { AppContext } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorSlotList(_ref) {\n  _s();\n  let {\n    slotList,\n    setSlotList\n  } = _ref;\n  const {\n    isDoctor,\n    setIsDoctor,\n    doctorId\n  } = useContext(AppContext);\n  useEffect(() => {\n    const callSlotList = async () => {\n      try {\n        const response = await axios.get(BASEURL + `/profile/book_slots_list/${doctorId}`);\n        console.log(response.data);\n        setSlotList(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    callSlotList();\n  }, [doctorId]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-unstyled\",\n    children: slotList.map(slot => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: slot.patientProfile ? slot.patientProfile.name : \"Not Booked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: slot.booking_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: slot.start_time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: slot.end_time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), slot.patientProfile && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          type: \"button\",\n          onClick: e => {\n            e.preventDefault();\n          },\n          children: \"See Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          type: \"button\",\n          onClick: e => {\n            e.preventDefault();\n          },\n          children: \"Call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, slot.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorSlotList, \"shpSjxYvb4ZDl/xAGTu4mIXxfzE=\");\n_c = DoctorSlotList;\nexport default DoctorSlotList;\nvar _c;\n$RefreshReg$(_c, \"DoctorSlotList\");","map":{"version":3,"names":["useEffect","useState","useContext","Button","axios","BASEURL","Card","AppContext","jsxDEV","_jsxDEV","DoctorSlotList","_ref","_s","slotList","setSlotList","isDoctor","setIsDoctor","doctorId","callSlotList","response","get","console","log","data","error","className","children","map","slot","style","width","Title","patientProfile","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","booking_date","start_time","end_time","variant","type","onClick","e","preventDefault","id","_c","$RefreshReg$"],"sources":["D:/tele-health/tele-health-react/src/DoctorSlotList.js"],"sourcesContent":["import { useEffect, useState, useContext } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport { BASEURL } from './baseURL';\r\nimport { Card } from 'react-bootstrap';\r\nimport { AppContext } from './App';\r\n\r\n\r\n\r\nfunction DoctorSlotList( {slotList, setSlotList} ) {\r\n\r\n  const {isDoctor, setIsDoctor, doctorId} = useContext(AppContext);\r\n  \r\n  useEffect(()=>{\r\n    const callSlotList = async() =>{\r\n      try{\r\n        const response = await axios.get(BASEURL + `/profile/book_slots_list/${doctorId}`);\r\n        console.log(response.data);\r\n        setSlotList(response.data);\r\n      }\r\n      catch(error){\r\n        console.error(error);\r\n      }}\r\n      callSlotList();\r\n  }, [doctorId]);\r\n\r\n  return (\r\n    <ul className=\"list-unstyled\">\r\n      {slotList.map((slot) =>(\r\n        <li key={slot.id}>\r\n          <Card style={{ width: '18rem' }}>\r\n          <Card.Title>{slot.patientProfile? slot.patientProfile.name : \"Not Booked\"}</Card.Title>\r\n          <Card.Text>{slot.booking_date}</Card.Text>\r\n          <Card.Text>{slot.start_time}</Card.Text>\r\n          <Card.Text>{slot.end_time}</Card.Text>\r\n          {slot.patientProfile &&\r\n            <Button\r\n            variant=\"primary\"\r\n            className=\"mb-3\" \r\n            type=\"button\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n            }}>\r\n              See Details\r\n            </Button>\r\n            }\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"mb-3\" \r\n            type=\"button\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n            }}>\r\n              Call\r\n          </Button>\r\n          </Card>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default DoctorSlotList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}