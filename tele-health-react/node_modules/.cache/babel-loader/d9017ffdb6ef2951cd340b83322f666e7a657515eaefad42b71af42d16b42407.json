{"ast":null,"code":"var _jsxFileName = \"D:\\\\tele-health\\\\tele-health-react\\\\src\\\\PatientImagesPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Figure from 'react-bootstrap/Figure';\nimport axios from 'axios';\nimport { AppContext } from './App';\nimport { BASEURL } from './baseURL';\nimport { AWSBASEIMAGES } from './baseURL';\nimport UploadImageButton from './UploadImageButton';\nimport { decrypt } from './encrypt.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientImagesPage() {\n  _s();\n  const {\n    patientId\n  } = useContext(AppContext);\n  const [imageList, setImageList] = useState([]);\n  useEffect(() => {\n    axios.get(BASEURL + `/profile/my_image_list/${patientId}`).then(function (response) {\n      const imageList = response.data;\n      const decryptionPromises = imageList.map(image => {\n        const url = AWSBASEIMAGES + image.image;\n        return axios.get(url, {\n          responseType: 'blob'\n        }).then(response => {\n          const blob = response.data;\n          const filename = image.image.split('/').pop();\n          const file = new File([blob], filename, {\n            type: image.mime_type\n          });\n          return decrypt(file, image.key);\n        });\n      });\n      Promise.all(decryptionPromises).then(decryptedFiles => {\n        const decryptedImages = decryptedFiles.map(file => URL.createObjectURL(file));\n        setImageList(decryptedImages);\n        console.log(decryptedImages);\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"list-unstyled\",\n      children: imageList.map((imageUrl, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Figure.Image, {\n            src: imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UploadImageButton, {\n      imageList: imageList,\n      setImageList: setImageList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientImagesPage, \"9bMbss+rRTJv6RWla/uz/Q/vfIc=\");\n_c = PatientImagesPage;\nexport default PatientImagesPage;\nvar _c;\n$RefreshReg$(_c, \"PatientImagesPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","ListGroup","Figure","axios","AppContext","BASEURL","AWSBASEIMAGES","UploadImageButton","decrypt","jsxDEV","_jsxDEV","PatientImagesPage","_s","patientId","imageList","setImageList","get","then","response","data","decryptionPromises","map","image","url","responseType","blob","filename","split","pop","file","File","type","mime_type","key","Promise","all","decryptedFiles","decryptedImages","URL","createObjectURL","console","log","catch","error","children","className","imageUrl","index","Item","Image","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/tele-health/tele-health-react/src/PatientImagesPage.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Figure from 'react-bootstrap/Figure';\r\nimport axios from 'axios';\r\nimport { AppContext } from './App';\r\nimport { BASEURL } from './baseURL';\r\nimport { AWSBASEIMAGES } from './baseURL';\r\nimport UploadImageButton from './UploadImageButton'\r\nimport {decrypt} from './encrypt.js'\r\n\r\n\r\n\r\nfunction PatientImagesPage() {\r\n\r\n    const {patientId} = useContext(AppContext);\r\n    const [imageList, setImageList] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() =>{\r\n        axios\r\n        .get(BASEURL+`/profile/my_image_list/${patientId}`)\r\n        .then(function (response) {\r\n            const imageList = response.data;\r\n            const decryptionPromises = imageList.map((image) =>{\r\n                const url = AWSBASEIMAGES + image.image;\r\n                return axios\r\n                .get(url, { responseType: 'blob' })\r\n                .then((response) => {\r\n                    const blob = response.data;\r\n                    const filename = image.image.split('/').pop(); \r\n                    const file = new File([blob], filename, { type: image.mime_type });\r\n                    return decrypt(file, image.key);\r\n                });\r\n            });\r\n            Promise.all(decryptionPromises)\r\n            .then((decryptedFiles) => {\r\n            const decryptedImages = decryptedFiles.map((file) =>\r\n                URL.createObjectURL(file)\r\n            );\r\n            setImageList(decryptedImages);\r\n            console.log(decryptedImages)\r\n            })\r\n            .catch((error) => {\r\n            console.error(error);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n        console.error(error);\r\n        });\r\n    }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <ListGroup className=\"list-unstyled\">\r\n            {imageList.map((imageUrl, index) => (\r\n                <li key={index}>\r\n                    <ListGroup.Item>\r\n                        <Figure.Image\r\n                        src={imageUrl}\r\n                        />\r\n                </ListGroup.Item>\r\n                </li>\r\n            ))}\r\n        </ListGroup>\r\n        <UploadImageButton \r\n        imageList = {imageList}\r\n        setImageList = {setImageList}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PatientImagesPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}