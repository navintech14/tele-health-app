{"ast":null,"code":"var _jsxFileName = \"D:\\\\tele-health\\\\tele-health-react\\\\src\\\\PatientDetailCard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nimport { BASEURL } from './baseURL';\nimport { AppContext } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PatientDetailCard() {\n  _s();\n  const {\n    selectedPatient\n  } = useContext(AppContext);\n  const [patienDetails, setPatientDetails] = useState(null);\n  const [imageList, setImageList] = useState([]);\n  useEffect(() => {\n    const getPatientDetails = async () => {\n      try {\n        const response = await axios.get(BASEURL + `/profile/patient_profile_details/${selectedPatient}`);\n        console.log(response.data);\n        setPatientDetails(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getPatientDetails();\n    axios.get(BASEURL + `/profile/my_image_list/${selectedPatient}`).then(function (response) {\n      const imageList = response.data;\n      const decryptionPromises = imageList.map(image => {\n        const url = BASEURL + image.image;\n        return axios.get(url, {\n          responseType: 'blob'\n        }).then(response => {\n          const blob = response.data;\n          const filename = image.image.split('/').pop();\n          const file = new File([blob], filename, {\n            type: image.mime_type\n          });\n          return decrypt(file, image.key);\n        });\n      });\n      Promise.all(decryptionPromises).then(decryptedFiles => {\n        const decryptedImages = decryptedFiles.map(file => URL.createObjectURL(file));\n        setImageList(decryptedImages);\n        console.log(decryptedImages);\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [selectedPatient]);\n  function calculateAge(birthdate) {\n    const birthYear = parseInt(birthdate.slice(0, 4));\n    const birthMonth = parseInt(birthdate.slice(5, 7));\n    const birthDay = parseInt(birthdate.slice(8, 10));\n    const today = new Date();\n    const currentYear = today.getFullYear();\n    const currentMonth = today.getMonth() + 1;\n    const currentDay = today.getDate();\n    let age = currentYear - birthYear;\n    if (birthMonth > currentMonth || birthMonth === currentMonth && birthDay > currentDay) {\n      age--;\n    }\n    return age;\n  }\n  return patienDetails && imageList && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: patienDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: calculateAge(patienDetails.birthdate) + \" year old \" + patienDetails.gender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: \"Blood Group: \" + patienDetails.blood_group\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: \"Height: \" + patienDetails.height + \" cm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: \"Weight: \" + patienDetails.weight + \" kg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(PatientDetailCard, \"z5hKCW5i+kgvF35sktNf7UcpzjY=\");\n_c = PatientDetailCard;\nexport default PatientDetailCard;\nvar _c;\n$RefreshReg$(_c, \"PatientDetailCard\");","map":{"version":3,"names":["React","useEffect","useState","useContext","axios","Card","BASEURL","AppContext","jsxDEV","_jsxDEV","Fragment","_Fragment","PatientDetailCard","_s","selectedPatient","patienDetails","setPatientDetails","imageList","setImageList","getPatientDetails","response","get","console","log","data","error","then","decryptionPromises","map","image","url","responseType","blob","filename","split","pop","file","File","type","mime_type","decrypt","key","Promise","all","decryptedFiles","decryptedImages","URL","createObjectURL","catch","calculateAge","birthdate","birthYear","parseInt","slice","birthMonth","birthDay","today","Date","currentYear","getFullYear","currentMonth","getMonth","currentDay","getDate","age","children","style","width","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","gender","blood_group","height","weight","_c","$RefreshReg$"],"sources":["D:/tele-health/tele-health-react/src/PatientDetailCard.js"],"sourcesContent":["import React from 'react'\r\nimport { useEffect, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { Card } from 'react-bootstrap';\r\nimport { BASEURL } from './baseURL';\r\nimport { AppContext } from './App';\r\n\r\nfunction PatientDetailCard() {\r\n\r\n    const {selectedPatient} = useContext(AppContext);\r\n    const [patienDetails, setPatientDetails] = useState(null);\r\n    const [imageList, setImageList] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const getPatientDetails = async() =>{\r\n            try{\r\n                const response = await axios.get(BASEURL+ `/profile/patient_profile_details/${selectedPatient}`);\r\n                console.log(response.data);\r\n                setPatientDetails(response.data);\r\n            }\r\n            catch(error){\r\n                console.error(error);\r\n            }\r\n        }\r\n        getPatientDetails();\r\n\r\n        axios\r\n        .get(BASEURL+`/profile/my_image_list/${selectedPatient}`)\r\n        .then(function (response) {\r\n            const imageList = response.data;\r\n            const decryptionPromises = imageList.map((image) =>{\r\n                const url = BASEURL + image.image;\r\n                return axios\r\n                .get(url, { responseType: 'blob' })\r\n                .then((response) => {\r\n                    const blob = response.data;\r\n                    const filename = image.image.split('/').pop(); \r\n                    const file = new File([blob], filename, { type: image.mime_type });\r\n                    return decrypt(file, image.key);\r\n                });\r\n            });\r\n            Promise.all(decryptionPromises)\r\n            .then((decryptedFiles) => {\r\n            const decryptedImages = decryptedFiles.map((file) =>\r\n                URL.createObjectURL(file)\r\n            );\r\n            setImageList(decryptedImages);\r\n            console.log(decryptedImages)\r\n            })\r\n            .catch((error) => {\r\n            console.error(error);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n        console.error(error);\r\n        });\r\n\r\n    }, [selectedPatient])\r\n\r\n\r\n\r\n    function calculateAge(birthdate) {\r\n        const birthYear = parseInt(birthdate.slice(0,4));\r\n        const birthMonth = parseInt(birthdate.slice(5,7));\r\n        const birthDay = parseInt(birthdate.slice(8,10));\r\n        \r\n        const today = new Date();\r\n        const currentYear = today.getFullYear();\r\n        const currentMonth = today.getMonth() + 1;\r\n        const currentDay = today.getDate();\r\n        \r\n        let age = currentYear - birthYear;\r\n        \r\n        if (birthMonth > currentMonth ||\r\n           (birthMonth === currentMonth && birthDay > currentDay)) {\r\n          age--;\r\n        }\r\n        \r\n        return age;\r\n      }\r\n\r\n      \r\n\r\n  return (\r\n    (patienDetails && imageList)&&\r\n        <>\r\n    <Card style={{ width: '18rem' }}>\r\n        <Card.Title>{patienDetails.name}</Card.Title>\r\n        <Card.Text>{calculateAge(patienDetails.birthdate) + \" year old \" + patienDetails.gender}</Card.Text>\r\n        <Card.Text>{\"Blood Group: \" + patienDetails.blood_group}</Card.Text>\r\n        <Card.Text>{\"Height: \" + patienDetails.height + \" cm\"}</Card.Text>\r\n        <Card.Text>{\"Weight: \" + patienDetails.weight + \" kg\"}</Card.Text>   \r\n    </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PatientDetailCard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}