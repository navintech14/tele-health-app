{"ast":null,"code":"import _regeneratorRuntime from\"D:/tele-health/tele-health-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/tele-health/tele-health-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useEffect,useState,useContext}from'react';import Button from'react-bootstrap/Button';import axios from'axios';import{BASEURL}from'./baseURL';import{Card,Container,Row,Col}from'react-bootstrap';import{AppContext}from'./App';import{useNavigate,Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function DoctorSlotList(_ref){var slotList=_ref.slotList,setSlotList=_ref.setSlotList;var _useContext=useContext(AppContext),isDoctor=_useContext.isDoctor,setIsDoctor=_useContext.setIsDoctor,doctorId=_useContext.doctorId,setSelectedPatient=_useContext.setSelectedPatient;var navigate=useNavigate();useEffect(function(){var callSlotList=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(BASEURL+\"/profile/book_slots_list/\".concat(doctorId));case 3:response=_context.sent;console.log(response.data);setSlotList(response.data);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function callSlotList(){return _ref2.apply(this,arguments);};}();callSlotList();},[doctorId]);return/*#__PURE__*/_jsx(Container,{className:\"m-1\",children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(\"ul\",{className:\"list-unstyled\",children:slotList.map(function(slot){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",style:{maxWidth:'350px'},children:[/*#__PURE__*/_jsx(Card.Title,{tag:\"h5\",children:slot.patientProfile?slot.patientProfile.name:\"Not Booked\"}),/*#__PURE__*/_jsxs(Card.Text,{children:[\"Date: \",slot.booking_date]}),/*#__PURE__*/_jsxs(Card.Text,{children:[\"Start Time: \",slot.start_time]}),/*#__PURE__*/_jsxs(Card.Text,{children:[\"End Time: \",slot.end_time]}),slot.patientProfile&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",className:\"custom-btn\",style:{width:\"50%\"},type:\"button\",onClick:function onClick(e){e.preventDefault();setSelectedPatient(slot.patientProfile.id);navigate(\"/patient_detail\");},children:\"See Details\"}),slot.patientProfile&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",className:\"custom-btn mt-2\",style:{width:\"50%\"},type:\"button\",onClick:function onClick(e){e.preventDefault();},children:\"Call\"})]})},slot.id);})})})});}export default DoctorSlotList;","map":{"version":3,"names":["useEffect","useState","useContext","Button","axios","BASEURL","Card","Container","Row","Col","AppContext","useNavigate","Link","jsx","_jsx","jsxs","_jsxs","DoctorSlotList","_ref","slotList","setSlotList","_useContext","isDoctor","setIsDoctor","doctorId","setSelectedPatient","navigate","callSlotList","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","concat","sent","console","log","data","t0","error","stop","apply","arguments","className","children","map","slot","style","maxWidth","Title","tag","patientProfile","name","Text","booking_date","start_time","end_time","variant","width","type","onClick","e","preventDefault","id"],"sources":["D:/tele-health/tele-health-react/src/DoctorSlotList.js"],"sourcesContent":["import { useEffect, useState, useContext } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport { BASEURL } from './baseURL';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { AppContext } from './App';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction DoctorSlotList( {slotList, setSlotList} ) {\r\n\r\n  const {isDoctor, setIsDoctor, doctorId, setSelectedPatient} = useContext(AppContext);\r\n  const navigate = useNavigate();\r\n  \r\n  useEffect(()=>{\r\n    const callSlotList = async() =>{\r\n      try{\r\n        const response = await axios.get(BASEURL + `/profile/book_slots_list/${doctorId}`);\r\n        console.log(response.data);\r\n        setSlotList(response.data);\r\n      }\r\n      catch(error){\r\n        console.error(error);\r\n      }}\r\n      callSlotList();\r\n  }, [doctorId]);\r\n\r\n  return (\r\n    <Container className=\"m-1\">\r\n    <Row>\r\n    <ul className=\"list-unstyled\">\r\n    \r\n      {slotList.map((slot) =>(\r\n        <li key={slot.id}>\r\n          <Card className=\"mb-4\" style={{ maxWidth: '350px' }}>\r\n          <Card.Title tag=\"h5\">{slot.patientProfile? slot.patientProfile.name : \"Not Booked\"}</Card.Title>\r\n          <Card.Text>Date: {slot.booking_date}</Card.Text>\r\n          <Card.Text>Start Time: {slot.start_time}</Card.Text>\r\n          <Card.Text>End Time: {slot.end_time}</Card.Text>\r\n          {slot.patientProfile &&\r\n            <Button\r\n            variant=\"primary\"\r\n            className=\"custom-btn\" \r\n            style={{ width: \"50%\" }}\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setSelectedPatient(slot.patientProfile.id);\r\n              navigate(\"/patient_detail\");\r\n              }}>\r\n              See Details\r\n              </Button>\r\n            }\r\n            {slot.patientProfile &&\r\n              <Button\r\n              variant=\"primary\"\r\n              className=\"custom-btn mt-2\" \r\n              style={{ width: \"50%\" }}\r\n              type=\"button\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n              }}>\r\n                Call\r\n            </Button>\r\n            }\r\n            \r\n          </Card>\r\n        </li>\r\n      ))}\r\n    \r\n    </ul>\r\n    </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default DoctorSlotList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}