{"ast":null,"code":"import _regeneratorRuntime from\"D:/tele-health/tele-health-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/tele-health/tele-health-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/tele-health/tele-health-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useEffect,useState,useContext}from'react';import axios from'axios';import{Card}from'react-bootstrap';import ListGroup from'react-bootstrap/ListGroup';import Figure from'react-bootstrap/Figure';import{BASEURL}from'./baseURL';import{AppContext}from'./App';import{decrypt}from'./encrypt.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function PatientDetailCard(){var _useContext=useContext(AppContext),selectedPatient=_useContext.selectedPatient;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),patienDetails=_useState2[0],setPatientDetails=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),imageList=_useState4[0],setImageList=_useState4[1];useEffect(function(){var getPatientDetails=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(BASEURL+\"/profile/patient_profile_details/\".concat(selectedPatient));case 3:response=_context.sent;console.log(response.data);setPatientDetails(response.data);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function getPatientDetails(){return _ref.apply(this,arguments);};}();getPatientDetails();axios.get(BASEURL+\"/profile/my_image_list/\".concat(selectedPatient)).then(function(response){var imageList=response.data;var decryptionPromises=imageList.map(function(image){var url=BASEURL+image.image;return axios.get(url,{responseType:'blob'}).then(function(response){var blob=response.data;var filename=image.image.split('/').pop();var file=new File([blob],filename,{type:image.mime_type});return decrypt(file,image.key);});});Promise.all(decryptionPromises).then(function(decryptedFiles){var decryptedImages=decryptedFiles.map(function(file){return URL.createObjectURL(file);});setImageList(decryptedImages);console.log(decryptedImages);}).catch(function(error){console.error(error);});}).catch(function(error){console.error(error);});},[selectedPatient]);function calculateAge(birthdate){var birthYear=parseInt(birthdate.slice(0,4));var birthMonth=parseInt(birthdate.slice(5,7));var birthDay=parseInt(birthdate.slice(8,10));var today=new Date();var currentYear=today.getFullYear();var currentMonth=today.getMonth()+1;var currentDay=today.getDate();var age=currentYear-birthYear;if(birthMonth>currentMonth||birthMonth===currentMonth&&birthDay>currentDay){age--;}return age;}return patienDetails&&imageList&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Card,{style:{width:'18rem'},children:[/*#__PURE__*/_jsx(Card.Title,{children:patienDetails.name}),/*#__PURE__*/_jsx(Card.Text,{children:calculateAge(patienDetails.birthdate)+\" year old \"+patienDetails.gender}),/*#__PURE__*/_jsx(Card.Text,{children:\"Blood Group: \"+patienDetails.blood_group}),/*#__PURE__*/_jsx(Card.Text,{children:\"Height: \"+patienDetails.height+\" cm\"}),/*#__PURE__*/_jsx(Card.Text,{children:\"Weight: \"+patienDetails.weight+\" kg\"})]}),/*#__PURE__*/_jsx(ListGroup,{className:\"list-unstyled\",children:imageList.map(function(imageUrl,index){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Figure.Image,{src:imageUrl})})},index);})})]});}export default PatientDetailCard;","map":{"version":3,"names":["React","useEffect","useState","useContext","axios","Card","ListGroup","Figure","BASEURL","AppContext","decrypt","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PatientDetailCard","_useContext","selectedPatient","_useState","_useState2","_slicedToArray","patienDetails","setPatientDetails","_useState3","_useState4","imageList","setImageList","getPatientDetails","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","concat","sent","console","log","data","t0","error","stop","apply","arguments","then","decryptionPromises","map","image","url","responseType","blob","filename","split","pop","file","File","type","mime_type","key","Promise","all","decryptedFiles","decryptedImages","URL","createObjectURL","catch","calculateAge","birthdate","birthYear","parseInt","slice","birthMonth","birthDay","today","Date","currentYear","getFullYear","currentMonth","getMonth","currentDay","getDate","age","children","style","width","Title","name","Text","gender","blood_group","height","weight","className","imageUrl","index","Item","Image","src"],"sources":["D:/tele-health/tele-health-react/src/PatientDetailCard.js"],"sourcesContent":["import React from 'react'\r\nimport { useEffect, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { Card } from 'react-bootstrap';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Figure from 'react-bootstrap/Figure';\r\nimport { BASEURL } from './baseURL';\r\nimport { AppContext } from './App';\r\nimport {decrypt} from './encrypt.js'\r\n\r\nfunction PatientDetailCard() {\r\n\r\n    const {selectedPatient} = useContext(AppContext);\r\n    const [patienDetails, setPatientDetails] = useState(null);\r\n    const [imageList, setImageList] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const getPatientDetails = async() =>{\r\n            try{\r\n                const response = await axios.get(BASEURL+ `/profile/patient_profile_details/${selectedPatient}`);\r\n                console.log(response.data);\r\n                setPatientDetails(response.data);\r\n            }\r\n            catch(error){\r\n                console.error(error);\r\n            }\r\n        }\r\n        getPatientDetails();\r\n\r\n        axios\r\n        .get(BASEURL+`/profile/my_image_list/${selectedPatient}`)\r\n        .then(function (response) {\r\n            const imageList = response.data;\r\n            const decryptionPromises = imageList.map((image) =>{\r\n                const url = BASEURL + image.image;\r\n                return axios\r\n                .get(url, { responseType: 'blob' })\r\n                .then((response) => {\r\n                    const blob = response.data;\r\n                    const filename = image.image.split('/').pop(); \r\n                    const file = new File([blob], filename, { type: image.mime_type });\r\n                    return decrypt(file, image.key);\r\n                });\r\n            });\r\n            Promise.all(decryptionPromises)\r\n            .then((decryptedFiles) => {\r\n            const decryptedImages = decryptedFiles.map((file) =>\r\n                URL.createObjectURL(file)\r\n            );\r\n            setImageList(decryptedImages);\r\n            console.log(decryptedImages)\r\n            })\r\n            .catch((error) => {\r\n            console.error(error);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n        console.error(error);\r\n        });\r\n\r\n    }, [selectedPatient])\r\n\r\n\r\n\r\n    function calculateAge(birthdate) {\r\n        const birthYear = parseInt(birthdate.slice(0,4));\r\n        const birthMonth = parseInt(birthdate.slice(5,7));\r\n        const birthDay = parseInt(birthdate.slice(8,10));\r\n        \r\n        const today = new Date();\r\n        const currentYear = today.getFullYear();\r\n        const currentMonth = today.getMonth() + 1;\r\n        const currentDay = today.getDate();\r\n        \r\n        let age = currentYear - birthYear;\r\n        \r\n        if (birthMonth > currentMonth ||\r\n           (birthMonth === currentMonth && birthDay > currentDay)) {\r\n          age--;\r\n        }\r\n        \r\n        return age;\r\n      }\r\n\r\n      \r\n\r\n  return (\r\n    (patienDetails && imageList)&&\r\n        <>\r\n    <Card style={{ width: '18rem' }}>\r\n        <Card.Title>{patienDetails.name}</Card.Title>\r\n        <Card.Text>{calculateAge(patienDetails.birthdate) + \" year old \" + patienDetails.gender}</Card.Text>\r\n        <Card.Text>{\"Blood Group: \" + patienDetails.blood_group}</Card.Text>\r\n        <Card.Text>{\"Height: \" + patienDetails.height + \" cm\"}</Card.Text>\r\n        <Card.Text>{\"Weight: \" + patienDetails.weight + \" kg\"}</Card.Text>   \r\n    </Card>\r\n    <ListGroup className=\"list-unstyled\">\r\n            {imageList.map((imageUrl, index) => (\r\n                <li key={index}>\r\n                    <ListGroup.Item>\r\n                        <Figure.Image\r\n                        src={imageUrl}\r\n                        />\r\n                </ListGroup.Item>\r\n                </li>\r\n            ))}\r\n        </ListGroup>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PatientDetailCard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}