{"ast":null,"code":"var _jsxFileName = \"D:\\\\tele-health\\\\tele-health-react\\\\src\\\\PatientImagesPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Figure from 'react-bootstrap/Figure';\nimport axios from 'axios';\nimport { AppContext } from './App';\nimport { BASEURL } from './baseURL';\nimport UploadImageButton from './UploadImageButton';\nimport { decrypt } from './encrypt.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientImagesPage() {\n  _s();\n  const {\n    patientId\n  } = useContext(AppContext);\n  const [imageList, setImageList] = useState([]);\n  const [decryptedImages, setDecryptedImages] = useState([]);\n  useEffect(() => {\n    axios.get(BASEURL + `/profile/my_image_list/${patientId}`).then(function (response) {\n      setImageList(response.data);\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  useEffect(() => {\n    const decryptedImagesArr = [];\n    imageList.forEach(image => {\n      decrypt(image.file, image.key, ctx => {\n        decryptedImagesArr.push(ctx.canvas.toDataURL());\n        setDecryptedImages(decryptedImagesArr);\n      });\n    });\n  }, [imageList]);\n\n  // useEffect(()=> {\n  //     axios.get(BASEURL+`/profile/my_image_list/${patientId}`)\n  //     .then(function (response) {\n  //         const decryptedImageList = response.data.map(myImage =>{\n  //             const decryptImageData = decrypt(myImage.image, myImage.key, (result) =>{\n  //                 const decryptImageDataVal =result;\n  //                 return {...myImage, image: decryptImageDataVal};\n  //             })\n  //         })\n  //         setImageList(decryptedImageList);\n  //         console.log(response);\n  //       })\n  //     .catch(function (error) {\n  //         console.log(error);\n  //     });\n  // }, [])\n\n  useEffect(() => {\n    axios.get(BASEURL + `/profile/my_image_list/${patientId}`).then(response => {\n      const promises = response.data.map(async myImage => {\n        try {\n          const canvas = await decrypt(myImage.image, myImage.key);\n          const imgWidth = canvas.width;\n          const imgHeight = canvas.height;\n          const imgUrl = canvas.toDataURL();\n          return {\n            ...myImage,\n            image: imgUrl,\n            imgWidth,\n            imgHeight\n          };\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      Promise.all(promises).then(decryptedImageList => {\n        setImageList(decryptedImageList.filter(image => image)); // Filter out any undefined values in the array\n      });\n\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"list-unstyled\",\n      children: imageList.map(myImage => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Figure.Image, {\n            src: `http://127.0.0.1:8000${myImage.image}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, myImage.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UploadImageButton, {\n      imageList: imageList,\n      setImageList: setImageList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientImagesPage, \"ds8Z2Yr+xaO2gn3x4eA4otzuUCA=\");\n_c = PatientImagesPage;\nexport default PatientImagesPage;\nvar _c;\n$RefreshReg$(_c, \"PatientImagesPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","ListGroup","Figure","axios","AppContext","BASEURL","UploadImageButton","decrypt","jsxDEV","_jsxDEV","PatientImagesPage","_s","patientId","imageList","setImageList","decryptedImages","setDecryptedImages","get","then","response","data","console","log","catch","error","decryptedImagesArr","forEach","image","file","key","ctx","push","canvas","toDataURL","promises","map","myImage","imgWidth","width","imgHeight","height","imgUrl","Promise","all","decryptedImageList","filter","children","className","Item","Image","src","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["D:/tele-health/tele-health-react/src/PatientImagesPage.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Figure from 'react-bootstrap/Figure';\r\nimport axios from 'axios';\r\nimport { AppContext } from './App';\r\nimport { BASEURL } from './baseURL';\r\nimport UploadImageButton from './UploadImageButton'\r\nimport {decrypt} from './encrypt.js'\r\n\r\n\r\n\r\nfunction PatientImagesPage() {\r\n\r\n    const {patientId} = useContext(AppContext);\r\n    const [imageList, setImageList] = useState([]);\r\n    const [decryptedImages, setDecryptedImages] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        axios.get(BASEURL+`/profile/my_image_list/${patientId}`)\r\n        .then(function (response) {\r\n            setImageList(response.data);\r\n            console.log(response);\r\n          })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const decryptedImagesArr = [];\r\n        imageList.forEach((image) => {\r\n          decrypt(image.file, image.key, (ctx) => {\r\n            decryptedImagesArr.push(ctx.canvas.toDataURL());\r\n            setDecryptedImages(decryptedImagesArr);\r\n          });\r\n        });\r\n      }, [imageList]);\r\n\r\n\r\n    // useEffect(()=> {\r\n    //     axios.get(BASEURL+`/profile/my_image_list/${patientId}`)\r\n    //     .then(function (response) {\r\n    //         const decryptedImageList = response.data.map(myImage =>{\r\n    //             const decryptImageData = decrypt(myImage.image, myImage.key, (result) =>{\r\n    //                 const decryptImageDataVal =result;\r\n    //                 return {...myImage, image: decryptImageDataVal};\r\n    //             })\r\n    //         })\r\n    //         setImageList(decryptedImageList);\r\n    //         console.log(response);\r\n    //       })\r\n    //     .catch(function (error) {\r\n    //         console.log(error);\r\n    //     });\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        axios\r\n          .get(BASEURL + `/profile/my_image_list/${patientId}`)\r\n          .then((response) => {\r\n            const promises = response.data.map(async (myImage) => {\r\n              try {\r\n                const canvas = await decrypt(myImage.image, myImage.key);\r\n                const imgWidth = canvas.width;\r\n                const imgHeight = canvas.height;\r\n                const imgUrl = canvas.toDataURL();\r\n                return { ...myImage, image: imgUrl, imgWidth, imgHeight };\r\n              } catch (error) {\r\n                console.log(error);\r\n              }\r\n            });\r\n            Promise.all(promises).then((decryptedImageList) => {\r\n              setImageList(decryptedImageList.filter((image) => image)); // Filter out any undefined values in the array\r\n            });\r\n            console.log(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }, []);\r\n      \r\n\r\n\r\n  return (\r\n    <div>\r\n        <ListGroup className=\"list-unstyled\">\r\n            {imageList.map((myImage) => (\r\n                <li key={myImage.id}>\r\n                    <ListGroup.Item>\r\n                        <Figure.Image\r\n                        src={`http://127.0.0.1:8000${myImage.image}`}\r\n                        />\r\n                </ListGroup.Item>\r\n                </li>\r\n            ))}\r\n        </ListGroup>\r\n        <UploadImageButton \r\n        imageList = {imageList}\r\n        setImageList = {setImageList}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PatientImagesPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}